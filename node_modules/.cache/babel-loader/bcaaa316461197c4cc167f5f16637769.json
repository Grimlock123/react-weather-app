{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/mouba/Desktop/react-weather-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nconst API_KEY = \"7fec35e807f5266daecf0ea2c67f65e9\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      icon: '',\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n\n      if (city && country) {\n        console.log(data);\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          icon: data.weather[0].icon,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter value\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Titles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      icon: this.state.icon,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/mouba/Desktop/react-weather-app/src/App.js"],"names":["React","Component","Titles","Form","Weather","API_KEY","App","state","temperature","undefined","city","country","humidity","description","icon","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","console","log","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,IAAI,EAAC,EANC;AAONC,MAAAA,KAAK,EAAEN;AAPD,KADkB;;AAAA,SAU1BO,UAV0B,GAUb,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMR,IAAI,GAAGO,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBV,IAAlB,CAAuBW,KAApC;AACA,YAAMV,OAAO,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,OAAlB,CAA0BU,KAA1C;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,oDAAmDb,IAAK,IAAGC,OAAQ,UAASN,OAAQ,eAD3D,CAA5B;AAIA,YAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAIf,IAAI,IAAIC,OAAZ,EAAqB;AACnBe,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAKI,QAAL,CAAc;AACZpB,UAAAA,WAAW,EAAEgB,IAAI,CAACK,IAAL,CAAUC,IADX;AAEZpB,UAAAA,IAAI,EAAEc,IAAI,CAACO,IAFC;AAGZpB,UAAAA,OAAO,EAAEa,IAAI,CAACQ,GAAL,CAASrB,OAHN;AAIZC,UAAAA,QAAQ,EAAEY,IAAI,CAACK,IAAL,CAAUjB,QAJR;AAKZC,UAAAA,WAAW,EAAEW,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBpB,WALjB;AAMZC,UAAAA,IAAI,EAAEU,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBnB,IANV;AAOZC,UAAAA,KAAK,EAAE;AAPK,SAAd;AASD,OAXD,MAWO;AACL,aAAKa,QAAL,CAAc;AACZpB,UAAAA,WAAW,EAAEC,SADD;AAEZC,UAAAA,IAAI,EAAED,SAFM;AAGZE,UAAAA,OAAO,EAAEF,SAHG;AAIZG,UAAAA,QAAQ,EAAEH,SAJE;AAKZI,UAAAA,WAAW,EAAEJ,SALD;AAMZM,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD;AACF,KAxCyB;AAAA;;AA0C1BmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKlB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWC,WAD1B;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJvB;AAKE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAL1B;AAME,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IANnB;AAOE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAeD;;AA1DyB;;AA6D5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"7fec35e807f5266daecf0ea2c67f65e9\";\n\nclass App extends Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon:'',\n    error: undefined,\n  };\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n\n    const data = await api_call.json();\n    if (city && country) {\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        icon: data.weather[0].icon,\n        error: \"\",\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter value\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Titles />\n        <Form getWeather={this.getWeather} />\n        <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          description={this.state.description}\n          icon={this.state.icon}\n          error={this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}